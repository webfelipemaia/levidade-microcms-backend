openapi: 3.0.0
info:
  title: Levidade API
  version: 1.0.0
  description: Documentação da API usando Swagger com YAML
servers:
  - url: http://localhost:4000/api/v1

paths:
  /auth/app:
    get:
      tags:
        - Auth
      summary: Retorna informações da aplicação
      responses:
        '200':
          description: Nome da aplicação
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Minha API Express

  /auth/login:
    post:
      tags:
        - Auth
      summary: Realiza login do usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: usuario@email.com
                password:
                  type: string
                  example: senha123
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR...
        '401':
          description: Credenciais inválidas

  /auth/register:
    post:
      tags:
        - Auth
      summary: Registra um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: Felipe Maia
                email:
                  type: string
                  example: usuario@email.com
                password:
                  type: string
                  example: senha123
      responses:
        '201':
          description: Usuário registrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Felipe Maia
                  email:
                    type: string
                    example: usuario@email.com
        '400':
          description: Erro na validação dos dados
  /users:
      get:
        tags:
          - Users
        summary: Retorna todos os usuários
        security:
          - bearerAuth: []
        responses:
          '200':
            description: Lista de usuários
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/User'
      post:
        tags:
          - Users
        summary: Cria um novo usuário
        security:
          - bearerAuth: []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInput'
        responses:
          '200':
            description: Usuário criado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      tags:
        - Users
      summary: Retorna um usuário pelo ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado
    put:
      tags:
        - Users
      summary: Atualiza um usuário pelo ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Usuário atualizado
    delete:
      tags:
        - Users
      summary: Deleta um usuário pelo ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuário deletado

  /users/roles:
    get:
      tags:
        - Users
      summary: Retorna todos os papéis de usuários
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de roles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /users/authenticate:
    post:
      tags:
        - Users
      summary: Autentica um usuário (login)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: usuario@email.com
                password:
                  type: string
                  example: senha123
      responses:
        '200':
          description: Usuário autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR...
        '401':
          description: Credenciais inválidas

  /users/register:
    post:
      tags:
        - Users
      summary: Registra um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Usuário registrado com sucesso